Object subclass: #Cargo	instanceVariableNames: 'nombre'	classVariableNames: ''	package: 'sistFacturacion'!!Cargo methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 10:18'!precioPorCargo	self subclassResponsibility ! !!Cargo methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 11:18'!nombre: unNombre	nombre := unNombre. ! !!Cargo methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 11:18'!nombre	^nombre.! !Error subclass: #EsaFacturaNoEstaRegistradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'sistFacturacion'!Error subclass: #EseUsuarioNoEstaRegistradoError	instanceVariableNames: ''	classVariableNames: ''	package: 'sistFacturacion'!Object subclass: #Factura	instanceVariableNames: 'tarifa cargos mes cargo'	classVariableNames: ''	package: 'sistFacturacion'!!Factura methodsFor: 'accessing' stamp: 'CandelaSerrano 12/17/2021 19:48'!tarifa	^ tarifa! !!Factura methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 12:55'!mes: unMes	mes := unMes.! !!Factura methodsFor: 'accessing' stamp: 'CandelaSerrano 12/19/2021 11:23'!mostrarCargos 	cargos do: [ :cargoDelMes | 		Transcript				show: 'Llamada a: ';				show: (cargoDelMes nombre).	 		Transcript				show: ' ----- Se cobra: ';				show: (cargoDelMes precioPorCargo). 		Transcript show: ' '; cr.	].! !!Factura methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 12:55'!mes	^ mes.! !!Factura methodsFor: 'initialization' stamp: 'CandelaSerrano 12/18/2021 10:07'!initialize 	cargos := OrderedCollection new.! !!Factura methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 10:34'!crearCargoLlamadaLocalSegun: cantMinutos elDia: unDia aLas: unHorario	cargo := LlamadaLocal new.	cargo hechoElDia: unDia aLas: unHorario.	tarifa := (tarifa + (cargo precioPorCargo * cantMinutos)).  	cargos add: cargo.	! !!Factura methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/19/2021 11:13'!crearCargoLlamadaNacionalADestino: unaLocalidad aKms: cantKilometros	cargo  := LlamadaNacional new.	cargo cargarDestino: unaLocalidad aKms: cantKilometros.	tarifa := (tarifa + cargo precioPorCargo).  	cargos add: cargo.! !!Factura methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:45'!tarifaInicial: unaTarifa	tarifa := unaTarifa.! !!Factura methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:52'!crearCargoLlamadaInternacionalADestino: unPais 	cargo := LlamadaInternacional new.	cargo hechoADestino: unPais.	tarifa := (tarifa + cargo precioPorCargo).  	cargos add: cargo.! !Cargo subclass: #LlamadaInternacional	instanceVariableNames: 'continentes paisesRegistrados pais'	classVariableNames: ''	package: 'sistFacturacion'!!LlamadaInternacional methodsFor: 'initialization' stamp: 'CandelaSerrano 12/18/2021 11:51'!initialize 	paisesRegistrados := #('Uruguay' 'Francia' 'Holanda' 'Brasil' 'PerÃº' 'Estados Unidos' 'Alemania' 'Irlanda' 'India' 'Japon' 'China' 'Corea' 'Australia' 'Sudafrica' 'Nigeria').! !!LlamadaInternacional methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 11:59'!pais	^ pais.! !!LlamadaInternacional methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 12:00'!precioPorCargo 	self estaRegistrado ifTrue: [ ^ 5 ].	^ 7.! !!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:58'!hechoADestino: unPais 	self nombre: unPais.	pais := unPais.! !!LlamadaInternacional methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:59'!estaRegistrado	paisesRegistrados detect: [ :paisRegistrado | paisRegistrado = self pais ] ifFound: [ ^true ].	^false.! !Cargo subclass: #LlamadaLocal	instanceVariableNames: 'dias diasHabiles horariosMinimos dia hora'	classVariableNames: ''	package: 'sistFacturacion'!!LlamadaLocal methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 10:54'!precioPorCargo 	self esDiaHabil ifTrue: [ self esHorarioMinimo ifTrue: [ ^ 0.2 ] ].	^ 0.1.! !!LlamadaLocal methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 10:25'!dia	^ dia.! !!LlamadaLocal methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 10:26'!hora	^ hora.! !!LlamadaLocal methodsFor: 'initialization' stamp: 'CandelaSerrano 12/18/2021 10:33'!initialize 	diasHabiles := #('Lunes' 'Martes' 'Miercoles' 'Jueves' 'Viernes').	horariosMinimos := #(8 9 10 11 12 13 14 15 16 17 18 19 20).! !!LlamadaLocal methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 10:33'!esHorarioMinimo	horariosMinimos detect: [ :horarioMinimo | horarioMinimo = self hora ] ifFound: [ ^true ].	^false.! !!LlamadaLocal methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:17'!hechoElDia: unDia aLas: unHorario	dia := unDia.	hora := unHorario.	self nombre: 'Local'.! !!LlamadaLocal methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 10:25'!esDiaHabil	diasHabiles detect: [ :diaHabil | diaHabil = self dia ] ifFound: [ ^true ].	^false.! !Cargo subclass: #LlamadaNacional	instanceVariableNames: 'localidades kilometros'	classVariableNames: ''	package: 'sistFacturacion'!!LlamadaNacional methodsFor: 'initialization' stamp: 'CandelaSerrano 12/18/2021 10:56'!initialize 	localidades := OrderedCollection new.! !!LlamadaNacional methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 11:01'!precioPorCargo	kilometros >= 30 ifTrue: [ ^ 4 ].	^ 2.! !!LlamadaNacional methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:18'!cargarDestino: unaLocalidad aKms: cantKilometros	kilometros := cantKilometros.	self nombre: unaLocalidad.! !Object subclass: #Sistema	instanceVariableNames: 'usuariosTelefonia usuario'	classVariableNames: ''	package: 'sistFacturacion'!!Sistema methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/17/2021 16:48'!nuevoUsuario: nombreUsuario	usuario := Usuario  new.	usuario nombre: nombreUsuario.	usuariosTelefonia add: usuario.! !!Sistema methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:58'!obtenerUsuario: nombreUsuario	^ usuariosTelefonia detect: [ :usuarios | (usuarios nombre = nombreUsuario ) ] ifNone: [ EseUsuarioNoEstaRegistradoError signal ].! !!Sistema methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:19'!registrarUsuario: nombreUsuario conPlan: valorTarifa	self nuevoUsuario: nombreUsuario.	(self obtenerUsuario: nombreUsuario) plan: valorTarifa.! !!Sistema methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:17'!registrarUsuario: nombreUsuario	self nuevoUsuario: nombreUsuario.! !!Sistema methodsFor: 'initialization' stamp: 'CandelaSerrano 12/17/2021 16:45'!initialize 	usuariosTelefonia := OrderedCollection new.! !!Sistema methodsFor: 'accessing' stamp: 'CandelaSerrano 12/19/2021 11:25'!mostrarFactura: unUsuario enElMes: unMes    | factura |Transcript				show: 'Nombre usuario: ';            show: (unUsuario nombre).   Transcript show: ' '; cr.	Transcript				show: 'Factura mes: ';            show: unMes.	Transcript show: ' '; cr.	Transcript				show: 'Abono mensual sin cargos: ';            show: (unUsuario tarifaMensual).	Transcript show: ' '; cr.	factura := (unUsuario obtenerFactura: unMes).	factura mostrarCargos.	Transcript				show: 'Total a pagar: ';            show: (factura tarifa).	Transcript show: ' '; cr.				! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Sistema class	instanceVariableNames: 'usuariosTelefonia nombreUsuario'!Object subclass: #Usuario	instanceVariableNames: 'nombre factura facturasMensuales tarifaMensual'	classVariableNames: ''	package: 'sistFacturacion'!!Usuario methodsFor: 'accessing' stamp: 'CandelaSerrano 12/18/2021 12:47'!tarifaMensual	^ tarifaMensual.! !!Usuario methodsFor: 'accessing' stamp: 'CandelaSerrano 12/17/2021 16:49'!nombre: nombreUsuario	nombre := nombreUsuario.! !!Usuario methodsFor: 'accessing' stamp: 'CandelaSerrano 12/17/2021 16:50'!nombre	^nombre.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:57'!obtenerFactura: unMes	^ facturasMensuales detect: [ :facturas | (facturas mes = unMes ) ] ifNone: [ EsaFacturaNoEstaRegistradoError signal ].! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 10:19'!crearLlamadaLocalDe: cantMinutos MinutosElDia: unDia aLas: unHorario	factura crearCargoLlamadaLocalSegun: cantMinutos elDia: unDia aLas: unHorario.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:47'!plan: valorTarifa	tarifaMensual := valorTarifa.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:52'!crearLlamadaInternacionalConDestino: unPais	 factura crearCargoLlamadaInternacionalADestino: unPais.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 11:22'!crearLlamadaNacionalADestino: unaLocalidad aKms: cantKilometros	factura crearCargoLlamadaNacionalADestino: unaLocalidad aKms: cantKilometros.! !!Usuario methodsFor: 'as yet unclassified' stamp: 'CandelaSerrano 12/18/2021 12:56'!nuevoMes: unMes	factura := Factura new.	factura mes: unMes.	factura tarifaInicial: (self tarifaMensual).	facturasMensuales add: factura.! !!Usuario methodsFor: 'initialization' stamp: 'CandelaSerrano 12/18/2021 12:38'!initialize	facturasMensuales := OrderedCollection new. ! !